// <auto-generated />
using System;
using Meta_xi.Application;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Meta_xi.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20241228040319_ModifyTrend")]
    partial class ModifyTrend
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Meta_xi.Application.BenefitPerRefer", b =>
                {
                    b.Property<int>("IdGanancias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdGanancias"));

                    b.Property<double>("Nivel1")
                        .HasColumnType("double precision");

                    b.Property<double>("Nivel2")
                        .HasColumnType("double precision");

                    b.Property<double>("Nivel3")
                        .HasColumnType("double precision");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdGanancias");

                    b.ToTable("BenefitPerRefers");
                });

            modelBuilder.Entity("Meta_xi.Application.DisponibilityToClaim", b =>
                {
                    b.Property<int>("IDDisponibility")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDDisponibility"));

                    b.Property<float>("Disponibility")
                        .HasColumnType("real");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("IDDisponibility");

                    b.HasIndex("UserID");

                    b.ToTable("DisponibilityToClaims");
                });

            modelBuilder.Entity("Meta_xi.Application.IsClaimed", b =>
                {
                    b.Property<int>("IDClaimed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDClaimed"));

                    b.Property<DateTime>("DateClaimed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IDMission")
                        .HasColumnType("integer");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("IDClaimed");

                    b.HasIndex("IDMission");

                    b.HasIndex("UserID");

                    b.ToTable("IsClaimeds");
                });

            modelBuilder.Entity("Meta_xi.Application.Missions", b =>
                {
                    b.Property<int>("IDMission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDMission"));

                    b.Property<int>("Goal")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Reward")
                        .HasColumnType("real");

                    b.HasKey("IDMission");

                    b.ToTable("Missionss");
                });

            modelBuilder.Entity("Meta_xi.Application.MissionsUser", b =>
                {
                    b.Property<int>("IDMissionUSer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDMissionUSer"));

                    b.Property<int>("IDMission")
                        .HasColumnType("integer");

                    b.Property<bool>("IsClaimed")
                        .HasColumnType("boolean");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("IDMissionUSer");

                    b.HasIndex("IDMission");

                    b.HasIndex("UserID");

                    b.ToTable("MissionsUsers");
                });

            modelBuilder.Entity("Meta_xi.Application.Plan", b =>
                {
                    b.Property<int>("IDPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDPlan"));

                    b.Property<double>("DailyBenefit")
                        .HasColumnType("double precision");

                    b.Property<int>("DaysActive")
                        .HasColumnType("integer");

                    b.Property<int>("MaxQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalBenefit")
                        .HasColumnType("double precision");

                    b.HasKey("IDPlan");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Meta_xi.Application.RechargeLog", b =>
                {
                    b.Property<int>("IdRechargeLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRechargeLog"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<float>("Recharge")
                        .HasColumnType("real");

                    b.HasKey("IdRechargeLog");

                    b.HasIndex("IdUser");

                    b.ToTable("RechargeLogs");
                });

            modelBuilder.Entity("Meta_xi.Application.ReferLevel1", b =>
                {
                    b.Property<int>("IDReferLevel1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDReferLevel1"));

                    b.Property<int>("IDUserReferrer")
                        .HasColumnType("integer");

                    b.Property<string>("UniqueCodeReFerred")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UniqueCodeReferrer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IDReferLevel1");

                    b.HasIndex("IDUserReferrer");

                    b.ToTable("ReferLevel1s");
                });

            modelBuilder.Entity("Meta_xi.Application.ReferLevel2", b =>
                {
                    b.Property<int>("IDReferLevel1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDReferLevel1"));

                    b.Property<int>("IDUserReferrer")
                        .HasColumnType("integer");

                    b.Property<string>("UniqueCodeReFerred")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UniqueCodeReferrer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IDReferLevel1");

                    b.HasIndex("IDUserReferrer");

                    b.ToTable("ReferLevel2s");
                });

            modelBuilder.Entity("Meta_xi.Application.ReferLevel3", b =>
                {
                    b.Property<int>("IDReferLevel1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDReferLevel1"));

                    b.Property<int>("IDUserReferrer")
                        .HasColumnType("integer");

                    b.Property<string>("UniqueCodeReFerred")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UniqueCodeReferrer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IDReferLevel1");

                    b.HasIndex("IDUserReferrer");

                    b.ToTable("ReferLevel3s");
                });

            modelBuilder.Entity("Meta_xi.Application.Trend", b =>
                {
                    b.Property<int>("IdTendency")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTendency"));

                    b.Property<int>("Goal")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Reward")
                        .HasColumnType("real");

                    b.HasKey("IdTendency");

                    b.ToTable("Trends");
                });

            modelBuilder.Entity("Meta_xi.Application.TrendUser", b =>
                {
                    b.Property<int>("IdTrendUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTrendUser"));

                    b.Property<int>("IDTrend")
                        .HasColumnType("integer");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<bool>("IsClaimed")
                        .HasColumnType("boolean");

                    b.HasKey("IdTrendUser");

                    b.HasIndex("IDTrend");

                    b.HasIndex("IdUser");

                    b.ToTable("TrendsUsers");
                });

            modelBuilder.Entity("Meta_xi.Application.UpdatePlansForUser", b =>
                {
                    b.Property<int>("IDUpdatePlansForUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDUpdatePlansForUser"));

                    b.Property<double>("AcumulatedBenefitperHour")
                        .HasColumnType("double precision");

                    b.Property<double>("AcumulatedTotalBenefit")
                        .HasColumnType("double precision");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IDUpdatePlansForUser");

                    b.ToTable("UpdatePlansForUser");
                });

            modelBuilder.Entity("Meta_xi.Application.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("WalletIdWallet")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WalletIdWallet");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Meta_xi.Application.UserPlans", b =>
                {
                    b.Property<int>("IDBuyPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDBuyPlan"));

                    b.Property<DateTime>("DatePlan")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NamePlan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Percentage")
                        .HasColumnType("double precision");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IDBuyPlan");

                    b.ToTable("UserPlans");
                });

            modelBuilder.Entity("Meta_xi.Application.Wallet", b =>
                {
                    b.Property<int>("IdWallet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdWallet"));

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdWallet");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("Meta_xi.Application.WelcomeBonus", b =>
                {
                    b.Property<int>("IDBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDBonus"));

                    b.Property<bool>("IsClaimed")
                        .HasColumnType("boolean");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("IDBonus");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("WelcomeBonuss");
                });

            modelBuilder.Entity("Meta_xi.Application.WithdrawLog", b =>
                {
                    b.Property<int>("IdWithdraw")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdWithdraw"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<float>("Withdraw")
                        .HasColumnType("real");

                    b.HasKey("IdWithdraw");

                    b.HasIndex("UserId");

                    b.ToTable("WithdrawLogs");
                });

            modelBuilder.Entity("Meta_xi.Application.DisponibilityToClaim", b =>
                {
                    b.HasOne("Meta_xi.Application.User", "User")
                        .WithMany("DisponibilityToClaims")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Meta_xi.Application.IsClaimed", b =>
                {
                    b.HasOne("Meta_xi.Application.Missions", "Missions")
                        .WithMany("IsClaimeds")
                        .HasForeignKey("IDMission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meta_xi.Application.User", "User")
                        .WithMany("IsClaimeds")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Missions");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Meta_xi.Application.MissionsUser", b =>
                {
                    b.HasOne("Meta_xi.Application.Missions", "Missions")
                        .WithMany("MissionsUsers")
                        .HasForeignKey("IDMission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meta_xi.Application.User", "User")
                        .WithMany("missionsUSers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Missions");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Meta_xi.Application.RechargeLog", b =>
                {
                    b.HasOne("Meta_xi.Application.User", "User")
                        .WithMany("rechargeLogs")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Meta_xi.Application.ReferLevel1", b =>
                {
                    b.HasOne("Meta_xi.Application.User", "User")
                        .WithMany("referLevel1s")
                        .HasForeignKey("IDUserReferrer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Meta_xi.Application.ReferLevel2", b =>
                {
                    b.HasOne("Meta_xi.Application.User", "User")
                        .WithMany("referLevel2s")
                        .HasForeignKey("IDUserReferrer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Meta_xi.Application.ReferLevel3", b =>
                {
                    b.HasOne("Meta_xi.Application.User", "User")
                        .WithMany("referLevel3s")
                        .HasForeignKey("IDUserReferrer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Meta_xi.Application.TrendUser", b =>
                {
                    b.HasOne("Meta_xi.Application.Trend", "Trend")
                        .WithMany("TrendUsers")
                        .HasForeignKey("IDTrend")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meta_xi.Application.User", "User")
                        .WithMany("trendUsers")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trend");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Meta_xi.Application.User", b =>
                {
                    b.HasOne("Meta_xi.Application.Wallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletIdWallet");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Meta_xi.Application.WelcomeBonus", b =>
                {
                    b.HasOne("Meta_xi.Application.User", "User")
                        .WithOne("WelcomeBonus")
                        .HasForeignKey("Meta_xi.Application.WelcomeBonus", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Meta_xi.Application.WithdrawLog", b =>
                {
                    b.HasOne("Meta_xi.Application.User", "User")
                        .WithMany("withdrawLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Meta_xi.Application.Missions", b =>
                {
                    b.Navigation("IsClaimeds");

                    b.Navigation("MissionsUsers");
                });

            modelBuilder.Entity("Meta_xi.Application.Trend", b =>
                {
                    b.Navigation("TrendUsers");
                });

            modelBuilder.Entity("Meta_xi.Application.User", b =>
                {
                    b.Navigation("DisponibilityToClaims");

                    b.Navigation("IsClaimeds");

                    b.Navigation("WelcomeBonus");

                    b.Navigation("missionsUSers");

                    b.Navigation("rechargeLogs");

                    b.Navigation("referLevel1s");

                    b.Navigation("referLevel2s");

                    b.Navigation("referLevel3s");

                    b.Navigation("trendUsers");

                    b.Navigation("withdrawLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
